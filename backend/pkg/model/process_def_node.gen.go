// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameProcessDefNode = "process_def_node"

// ProcessDefNode mapped from table <process_def_node>
type ProcessDefNode struct {
	ID             int64  `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`          // 唯一id
	ProcessDefID   string `gorm:"column:process_def_id;not null" json:"process_def_id"`       // 流程定义id
	NodeID         string `gorm:"column:node_id;not null" json:"node_id"`                     // 节点id
	NodeModel      int32  `gorm:"column:node_model;not null;default:1" json:"node_model"`     // 节点模型【1：开始节点；2：审批节点；3：办理节点；4：抄送节点；5：自定义节点；6：条件节点；7：分支节点；8：汇聚节点；9：结束节点】
	NodeName       string `gorm:"column:node_name;not null" json:"node_name"`                 // 节点名称
	ParentID       string `gorm:"column:parent_id;not null" json:"parent_id"`                 // 节点父ID
	ApproveType    int32  `gorm:"column:approve_type;not null;default:1" json:"approve_type"` // 审批类型【人工审批：1；自动通过：2；自动拒绝】默认人工审批1
	NoneHandler    int32  `gorm:"column:none_handler;not null;default:1" json:"none_handler"` // 审批人为空时【自动通过：1；自动转交管理员：2；指定审批人：3】默认自动通过1
	AppointHandler string `gorm:"column:appoint_handler;not null" json:"appoint_handler"`     // 审批人为空时指定审批人ID
	HandleMode     int32  `gorm:"column:handle_mode;not null;default:2" json:"handle_mode"`   // 审批方式【依次审批：1、会签（需要完成人数的审批人同意或拒绝才可完成节点）：2、或签（其中一名审批人同意或拒绝即可）：3】默认会签2
	FinishMode     int32  `gorm:"column:finish_mode;not null" json:"finish_mode"`             // 完成人数：依次审批默认0所有人不可选人，会签默认0所有人（可选人大于0），或签默认1一个人（可选人大于0）
	BranchMode     int32  `gorm:"column:branch_mode;not null;default:2" json:"branch_mode"`   // 分支执行方式【单分支：1；多分支：2】默认多分支2
	DefaultBranch  int32  `gorm:"column:default_branch;not null" json:"default_branch"`       // 单分支处理需要默认分支，在条件优先级无法处理时候执行默认分支，取值分支下标
	BranchLevel    int32  `gorm:"column:branch_level;not null" json:"branch_level"`           // 优先级，分支执行方式为多分支处理方式无优先级应为0
	ConditionGroup string `gorm:"column:condition_group;not null" json:"condition_group"`     // 条件组前端描述展示条件组
	ConditionExpr  string `gorm:"column:condition_expr;not null" json:"condition_expr"`       // 条件组解析后的表达式
	Remark         string `gorm:"column:remark;not null" json:"remark"`                       // 节点描述
	PreNodes       string `gorm:"column:pre_nodes;not null" json:"pre_nodes"`                 // 上节点ID集合,多个用逗号隔开
	NextNodes      string `gorm:"column:next_nodes;not null" json:"next_nodes"`               // 下节点ID集合,多个用逗号隔开
	LastNodes      string `gorm:"column:last_nodes;not null" json:"last_nodes"`               // 尾节点ID集合,多个用逗号隔开
	Index          int32  `gorm:"column:index;not null" json:"index"`                         // 节点下标
	BranchIndex    int32  `gorm:"column:branch_index;not null" json:"branch_index"`           // 分支节点下标
}

// TableName ProcessDefNode's table name
func (*ProcessDefNode) TableName() string {
	return TableNameProcessDefNode
}
